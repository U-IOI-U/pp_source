# This is a basic workflow that is manually triggered

name: Build Proxypool Source

# Controls when the action will run. Workflow runs when manually triggered using the UI
# or API.
on:
  workflow_dispatch:
  push:
    branches: [ dev ]
  schedule:
    - cron: 0 1 * * *

env:
  TZ: Asia/Shanghai

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "greet"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-22.04
    if: github.event.repository.owner.id == github.event.sender.id || github.event_name == 'schedule'

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Runs a single command using the runners shell
    - name: Checkout
      uses: actions/checkout@v2

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install -y ca-certificates apt-transport-https build-essential libncurses5-dev libncursesw5-dev zlib1g-dev gawk git gettext libssl-dev xsltproc rsync wget curl unzip file python3 python3-distutils openssh-client
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        sudo timedatectl set-timezone "$TZ"
        sudo mkdir -p /workdir
        sudo chown $USER:$GROUPS /workdir
        echo "COMPILE_STARTINGTIME=$(date +"%Y.%m.%d")" >> $GITHUB_ENV

    - name: Build Source
      run: |
        bash ./scripts/build_proxypool_source.sh

    - name: Get Proxies
      run: |
        while [ true ]; do
          curl -O -L https://github.com/U-IOI-U/proxypool/releases/download/debug/proxypool-linux-amd64
          [ -f 'proxypool-linux-amd64' ] || break
          chmod +x proxypool-linux-amd64

          curl -O -L https://github.com/U-IOI-U/proxypool/raw/0.7.13/assets/flags.json
          curl -O -L https://github.com/U-IOI-U/proxypool/raw/0.7.13/assets/GeoLite2-City.mmdb
          [ -f 'flags.json' -a -f 'GeoLite2-City.mmdb' ] || break
          mkdir assets && mv flags.json GeoLite2-City.mmdb assets/

          curl -O -L https://github.com/U-IOI-U/proxypool/raw/0.7.13/config/config.yaml
          [ -f 'config.yaml' ] || break

          echo "save-clash-proxy: \"proxies\"" >> config.yaml

          cp /workdir/pp_source.yaml source.yaml

          {
            echo "- type: clash"
            echo "  options:"
            echo "    url: https://github.com/U-IOI-U/pp_source/releases/download/proxypool/proxies"
            echo ""
          } >> ./source.yaml

          {
            echo "- type: webfuzzsub"
            echo "  options:"
            echo "    url: https://github.com/U-IOI-U/pp_source/raw/dev/webfuzzsub"
            echo ""
          } >> ./source.yaml

          {
            cat tgchannel
            echo ""
          } >> ./source.yaml

          ./proxypool-linux-amd64 -c config.yaml -d
          if [ -f 'proxies' ]; then
            mv proxies proxies_all /workdir/
          fi
          break
        done

    - name: Upload file to Release
      uses: ncipollo/release-action@main
      with:
        tag: proxypool
        makeLatest: true
        artifacts: /workdir/*
        allowUpdates: true
        token: ${{ secrets.GH_TOKEN }}
        body: |
          Build Proxypool Source Success!
